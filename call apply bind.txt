//CALL, APPLY, BIND


call----------

With the call() method, you can write a method that can be used for different objects



/let name={
  first_name:"saumya",
  last_name:"sharma",
}

let fullname=function(hometown){
  console.log(this.first_name+ " " + this.last_name+ " "+ + "from"+ hometown);
}



let name2={
  first_name:"peter",
  last_name:"smith",
}

fullname.call(name2);
fullname.call(name, "meerut");






_________________________________________________________________________________________________________________________________

APPLY-----

in above example if number of passes argument got increased then we may use apply method in wjhich we can pass list of argument 
the call() method takes arguments separately.

The apply() method takes arguments as an array.

it will take second argument as array..


let name={
  first_name:"saumya",
  last_name:"sharma",
}

let fullname=function(hometown, stat){
  console.log(this.first_name+ " " + this.last_name+ " "+  "from" +"  "+ hometown);
}



let name2={
  first_name:"peter",
  last_name:"smith",
}


fullname.apply(name, ["meerut", "uttarpradesh"]);


_______________________________________________________________________________________________

BIND()----------------


it gives you a copy which can be invoke later.

let name={
  first_name:"saumya",
  last_name:"sharma",
}

let fullname=function(hometown, stat){
  console.log(this.first_name+ " " + this.last_name+ " "+  "from" +"  "+ hometown);
}



let name2={
  first_name:"peter",
  last_name:"smith",
}


fullname.apply(name, ["meerut", "uttarpradesh"]);

let priontmyname= fullname.bind(name, "meerut")
console.log(priontmyname); //  it will give the function because printmyname is a function
priontmyname();// we have invoked printmyname function over here ...now iut will give complete output.








