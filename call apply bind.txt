//CALL, APPLY, BIND


call----------

With the call() method, you can write a method that can be used on different objects.



/let name={
  first_name:"saumya",
  last_name:"sharma",
}

let fullname=function(hometown){
  console.log(this.first_name+ " " + this.last_name+ " "+ + "from"+ hometown);
}



let name2={
  first_name:"peter",
  last_name:"smith",
}

fullname.call(name2);
fullname.call(name, "meerut");

APPLY-----

in above example if number of passes argument got increased then we may use apply method in wjhich we can pass list of argument 
the call() method takes arguments separately.

The apply() method takes arguments as an array.


let name={
  first_name:"saumya",
  last_name:"sharma",
}

let fullname=function(hometown, stat){
  console.log(this.first_name+ " " + this.last_name+ " "+  "from" +"  "+ hometown);
}



let name2={
  first_name:"peter",
  last_name:"smith",
}


fullname.apply(name, ["meerut", "uttarpradesh"]);




BIND()----------------


var obj = {name:"Niladri"};

var greeting = function(a,b,c){
    return "welcome "+this.name+" to "+a+" "+b+" in "+c;
};

//creates a bound function that has same body and parameters 
var bound = greeting.bind(obj); 


console.dir(bound); ///returns a function

console.log("Output using .bind() below ");

console.log(bound("Newtown","KOLKATA","WB")); //call the bound function






